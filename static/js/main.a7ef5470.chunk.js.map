{"version":3,"sources":["services/auth.service.js","components/topics.js","components/sign-up.js","components/login.js","components/navigation.js","components/homepage.js","components/addAnswer.js","components/answer.js","components/answer-list.js","components/topic-page.js","App.js","serviceWorker.js","index.js","services/topic.service.js"],"names":["hashPassword","plainPassword","saltParam","saltRounds","salt","Math","random","toString","substr","hashedPassword","i","btoa","login","username","password","Promise","resolve","reject","user","JSON","parse","localStorage","getItem","find","split","atob","comparePassword","setItem","status","removeItem","isLoggedIn","getUser","Topics","useState","topics","setTopics","id","title","newTopic","setNewTopic","showNewTopicInput","setShowNewTopicInput","message","setMessage","error","setError","useEffect","topicService","then","data","className","Button","positive","size","onClick","authService","document","getElementById","click","Icon","name","map","topic","key","to","Header","as","content","undefined","numberOfAnswers","Comment","Metadata","Date","lastAnswerPublishedAt","toLocaleString","navigator","language","dateStyle","timeStyle","hour12","Message","Fragment","Form","Field","Input","autoFocus","textLength","pointing","focus","fluid","onChange","event","target","value","String","floor","answers","placeholder","type","Group","Or","primary","animated","length","response","success","header","negative","Content","visible","hidden","Joi","require","SignUp","props","confirmPassword","checked","setUsers","modalOpen","modal","setModal","resetValues","getError","prop","details","err","path","includes","isLogged","Modal","onClose","open","closeIcon","Checkbox","label","isValid","object","string","alphanum","min","max","required","messages","pattern","valid","ref","boolean","options","abortEarly","validate","users","push","stringify","LogIn","compact","isLoggedOut","icon","iconPosition","onLogin","console","log","Navigation","loginStatus","setLoginStatus","src","process","window","location","href","Homepage","mobile","Container","inverted","style","fontSize","fontWeight","marginTop","AddAnswer","text","reply","setReply","TextArea","newTextLength","textLeft","e","onAddAnswer","publishedAt","publishedBy","labelPosition","Answer","Avatar","Author","Text","AnswerList","answer","TopicPage","setTopic","getTopic","match","params","topicId","backgroundColor","addAnswer","App","basename","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","defaultTopics","getDefaultTopics","module","exports","getTopics","sort","answer1","answer2","getTime","addTopic"],"mappings":"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","file":"static/js/main.a7ef5470.chunk.js","sourcesContent":["\r\nconst hashPassword = (plainPassword, saltParam, saltRounds) => {\r\n    const salt = saltParam || Math.random().toString(36).substr(2, 20);\r\n    let hashedPassword = plainPassword;\r\n    for (let i = 0; i < saltRounds; i++) {\r\n        hashedPassword = btoa(plainPassword + salt);\r\n    }\r\n    return `$${btoa(salt)}$${saltRounds}$${hashedPassword}`;\r\n}\r\n\r\nconst comparePassword = (plainPassword, hashedPassword) => {\r\n    const [_, salt, saltRounds, hash] = hashedPassword.split(\"$\");\r\n    return hashPassword(plainPassword, atob(salt), saltRounds) === hashedPassword;\r\n}\r\n\r\nexport function addUser(username, password) {\r\n    return new Promise((resolve, reject) => {\r\n        const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n        const user = {\r\n            username: username,\r\n            password: hashPassword(password, null, 10)\r\n        }\r\n        users.push(user);\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n        resolve({\r\n            status: 201\r\n        });\r\n    });\r\n}\r\n\r\nexport function login(username, password) {\r\n    return new Promise((resolve, reject) => {\r\n        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n        const user = users.find(user => user.username === username);\r\n        const hashedPassword = user.password;\r\n\r\n        if (user && comparePassword(password, hashedPassword)) {\r\n            localStorage.setItem('access_token', username);\r\n            resolve({\r\n                status: 200\r\n            })\r\n        } else {\r\n            localStorage.removeItem('access_token', username);\r\n            resolve({\r\n                status: 401\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport function isLoggedIn() {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('access_token');\r\n    return window.location.href = '/';\r\n}\r\n\r\nexport function getUser() {\r\n    const username = localStorage.getItem('access_token');\r\n    return username;\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport { Button, Form, Icon, Header, Message, Comment, Input } from 'semantic-ui-react'\r\nimport * as topicService from \"../services/topic.service\";\r\nimport * as authService from \"../services/auth.service\";\r\n\r\nconst Topics = () => {\r\n    const [topics, setTopics] = useState([]);\r\n    const [newTopic, setNewTopic] = useState({ id: '', title: '' });\r\n    const [showNewTopicInput, setShowNewTopicInput] = useState(false);\r\n    const [message, setMessage] = useState({});\r\n    const [error, setError] = useState({});\r\n\r\n    useEffect(() => {\r\n        topicService.getTopics().then(topics => {\r\n            setTopics(topics.data);\r\n        });\r\n    }, []);\r\n\r\n    //Button add topic that shows input\r\n    const topicInputHandler = () => {\r\n        if (authService.isLoggedIn()) {\r\n            setShowNewTopicInput(true);\r\n        } else {\r\n            document.getElementById('loginButton').click();\r\n        }\r\n    } \r\n\r\n    //Input value\r\n    const addTopicHandler = (event) => {\r\n        let newTopic = event.target.value;\r\n        setNewTopic({ id: String(Math.floor(Math.random() * 100)), title: newTopic, answers: [] });\r\n    }\r\n\r\n    const buttonConfirmHandler = () => {\r\n        if (newTopic.title.length < 5) {\r\n            setError({ ...error, textLength: { message: \"Minimum is 5 letters\" } });\r\n            return;\r\n        } else {\r\n            setError({ ...error, textLength: false });\r\n        }\r\n\r\n        topicService.addTopic(newTopic).then(response => {\r\n            if (response.status === 201) {\r\n                setTopics([...topics, newTopic]);\r\n                setNewTopic({ title: '', id: '' });\r\n                setShowNewTopicInput(false);\r\n                setMessage({ ...message, topic: { success: true, content: 'Topic is sucessfully submited.', header: 'Congratulations!' } })\r\n            } else {\r\n                setMessage({ ...message, topic: { negative: true, content: 'Unexpected error occured on the server side. Please try later.', header: 'Topic cannot be submited' } });\r\n            }\r\n        });\r\n    }\r\n\r\n    const buttonCancelHandler = () => {\r\n        setNewTopic({ title: '', id: '' });\r\n        setShowNewTopicInput(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"topics\">\r\n            <div className=\"topics__button\">\r\n                <Button positive size='medium' onClick={topicInputHandler}>Add new topic <Icon name='right arrow' />\r\n                </Button>\r\n            </div>\r\n            {topics.map(topic => {\r\n                return (\r\n                    <Link key={topic.id} to={'/question/' + topic.id}>\r\n                        <div className=\"topics__title\">\r\n                            <Header as=\"h3\" content={topic.title}></Header>\r\n                                <Icon name='reply' />\r\n                                {topic.numberOfAnswers  === undefined ? '0 replies ' : topic.numberOfAnswers} \r\n                                {topic.numberOfAnswers == 1 && <span> reply</span>}\r\n                                {topic.numberOfAnswers > 1 && <span> replies</span>}\r\n                                {topic.numberOfAnswers == 0 && <span> replies</span>}\r\n                            {topic.numberOfAnswers > 0 &&\r\n                                <Comment.Metadata>\r\n                                    <span>Latest: </span>\r\n                                    {new Date(topic.lastAnswerPublishedAt).toLocaleString(navigator.language, { dateStyle: 'long', timeStyle: 'short', hour12: true })}\r\n                                </Comment.Metadata>\r\n                            }\r\n                        </div>\r\n                    </Link>\r\n                )\r\n            })}\r\n            {message.topic &&\r\n                <Message {...message.topic}>\r\n                </Message>}\r\n\r\n            {showNewTopicInput &&\r\n                <React.Fragment>\r\n                    <Form> \r\n                    <Form.Field className=\"topics__form-input\">\r\n                        <Form.Input\r\n                            autoFocus\r\n                            error={error.textLength ? { content: error.textLength.message, pointing: 'below' } : null} \r\n                            focus \r\n                            fluid \r\n                            onChange={addTopicHandler} \r\n                            value={newTopic.title} \r\n                            placeholder=\"Enter topic name\" \r\n                            type=\"text\"\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field className=\"topics__button-container\">\r\n                        <Button.Group>\r\n                            <Button onClick={buttonCancelHandler}>Cancel</Button>\r\n                            <Button.Or />\r\n                            <Button primary animated onClick={buttonConfirmHandler}>\r\n                                <Button.Content visible>Confirm</Button.Content>\r\n                                <Button.Content hidden>\r\n                                    <Icon name='arrow right' />\r\n                                </Button.Content>\r\n                            </Button>\r\n                        </Button.Group>\r\n                    </Form.Field>\r\n                    </Form>\r\n                </React.Fragment>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Topics;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Modal } from 'semantic-ui-react'\r\nimport * as authService from \"../services/auth.service\";\r\nconst Joi = require('@hapi/joi');\r\n\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const [user, setUsers] = useState({ username: '', password: '', confirmPassword: '', checked: false });\r\n    const [error, setError] = useState();\r\n    const [modal, setModal] = useState({ modalOpen: false });\r\n\r\n    const handleOpen = () => {\r\n        setModal({ ...modal, modalOpen: true });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModal({ ...modal, modalOpen: false });\r\n        resetValues();\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setUsers({ ...user, username: '', password: '', confirmPassword: '', checked: false });\r\n    }\r\n\r\n    const addUsernameHandler = (event) => {\r\n        let username = event.target.value;\r\n        setUsers({ ...user, username: username });\r\n    }\r\n\r\n    const addPasswordHandler = (event) => {\r\n        let password = event.target.value;\r\n        setUsers({ ...user, password: password });\r\n    }\r\n\r\n    const addConfirmPasswordHandler = (event) => {\r\n        let confirmPassword = event.target.value;\r\n        setUsers({ ...user, confirmPassword: confirmPassword });\r\n    }\r\n\r\n    const checkboxHandler = () => {\r\n        setUsers({ ...user, checked: !user.checked });\r\n    }\r\n\r\n    const validations = () => {\r\n        const schema = Joi.object({\r\n            username: Joi.string()\r\n                .alphanum()\r\n                .min(3)\r\n                .max(30)\r\n                .required()\r\n                .messages({\r\n                    'string.base': `Username should be a type of 'text'`,\r\n                    'string.empty': `Username cannot be an empty field`,\r\n                    'string.min': `Username should have a minimum length of {#limit}`,\r\n                    'string.max': `Password should have a maximum length of {#limit}`,\r\n                    'any.required': `Username is a required field`\r\n                }),\r\n            password: Joi.string()\r\n                .pattern(/^[a-zA-Z0-9]*$/)\r\n                .min(8)\r\n                .max(30)\r\n                .required()\r\n                .messages({\r\n                    'string.pattern.base': `Password should contain numbers and letters only`,\r\n                    'string.empty': `Password cannot be an empty field`,\r\n                    'string.min': `Password should have a minimum length of {#limit}`,\r\n                    'string.max': `Password should have a maximum length of {#limit}`,\r\n                    'any.required': `Password is a required field`\r\n                }),\r\n            confirmPassword: Joi.string()\r\n                .valid(Joi.ref('password'))\r\n                .required()\r\n                .messages({\r\n                    'string.pattern.base': `Confirm password should contain numbers and letters only`,\r\n                    'string.empty': `Confirm password cannot be an empty field`,\r\n                    'any.required': `Confirm password is a required field`,\r\n                    'any.only': \"Passwords are not matching\"\r\n                }),\r\n            checked: Joi.boolean()\r\n                .valid(true)\r\n        }).options({\r\n            abortEarly: false\r\n        });\r\n\r\n        return schema.validate(user);\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        const isValid = validations().error;\r\n        setError(isValid);\r\n\r\n        if (isValid) {\r\n            return;\r\n        }\r\n\r\n        authService.addUser(user.username, user.password).then(response => {\r\n            setModal({ ...modal, modalOpen: false });\r\n            resetValues();\r\n        });\r\n    }\r\n\r\n    const getError = (error, prop) => {\r\n        return error && error.details.find(err => err.path.includes(prop));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!props.isLogged &&\r\n                <Button onClick={handleOpen}>Sign Up</Button>}\r\n            <Modal size='tiny'\r\n                onClose={handleClose}\r\n                open={modal.modalOpen}\r\n                closeIcon>\r\n                <Modal.Header>Sign Up</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Username</label>\r\n                            <Form.Input\r\n                                error={getError(error, 'username') ? { content: getError(error, 'username').message, pointing: 'above' } : null}\r\n                                value={user.username} onChange={addUsernameHandler} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Password</label>\r\n                            <Form.Input\r\n                                error={getError(error, \"password\") ? { content: getError(error, \"password\").message, pointing: 'above' } : null}\r\n                                value={user.password}\r\n                                type=\"password\"\r\n                                onChange={addPasswordHandler}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Confirm Password</label>\r\n                            <Form.Input\r\n                                value={user.confirmPassword}\r\n                                error={getError(error, \"confirmPassword\") ? { content: getError(error, \"confirmPassword\").message, pointing: 'above' } : null}\r\n                                type=\"password\" onChange={addConfirmPasswordHandler}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Form.Checkbox checked={user.checked} error={getError(error, 'checked') ? true : null} onChange={checkboxHandler} label='I agree to the Terms and Conditions' />\r\n                        </Form.Field>\r\n                        <Button onClick={submitHandler} type='submit'>Submit</Button>\r\n                    </Form>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react'\r\nimport { Button, Form, Modal, Message } from 'semantic-ui-react'\r\nimport * as authService from \"../services/auth.service\"\r\n\r\n\r\nconst LogIn = (props) => {\r\n    const [user, setUsers] = useState({ username: '', password: '' });\r\n    const [modal, setModal] = useState({ modalOpen: false });\r\n    const [message, setMessage] = useState({});\r\n\r\n    const handleOpen = () => {\r\n        setModal({ ...modal, modalOpen: true });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModal({ ...modal, modalOpen: false });\r\n        resetValues();\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setUsers({ ...user, username: '', password: '' });\r\n    }\r\n\r\n    const addUsernameHandler = (event) => {\r\n        let username = event.target.value;\r\n        setUsers({ ...user, username: username });\r\n    }\r\n\r\n    const addPasswordHandler = (event) => {\r\n        let password = event.target.value;\r\n        setUsers({ ...user, password: password });\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        authService.login(user.username, user.password).then(response => {\r\n            if (response.status === 200) {\r\n                setModal({ ...modal, modalOpen: false });\r\n                resetValues();\r\n                props.onLogin();\r\n            } else if (response.status === 401) {\r\n                setMessage({ ...message, login: { negative: true, content: 'Username or password are not correct' } })\r\n            }\r\n            console.log(user);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!props.isLogged &&\r\n                <Button id=\"loginButton\" onClick={handleOpen}>Log In</Button>}\r\n            {props.isLogged &&\r\n                <Button compact onClick={props.isLoggedOut}>Log out</Button>}\r\n            <Modal\r\n                size='tiny'\r\n                onClose={handleClose}\r\n                open={modal.modalOpen}\r\n                closeIcon>\r\n                <Modal.Header>Log in</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Username</label>\r\n                            <Form.Input\r\n                                fluid\r\n                                icon='user'\r\n                                iconPosition='left'\r\n                                value={user.username}\r\n                                onChange={addUsernameHandler}\r\n                            />\r\n\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Password</label>\r\n                            <Form.Input\r\n                            fluid\r\n                                icon='lock'\r\n                                iconPosition='left'\r\n                                type='password'\r\n                                value={user.password}\r\n                                onChange={addPasswordHandler}\r\n                            />\r\n                        </Form.Field>\r\n                        {message.login &&\r\n                            <Message {...message.login}>\r\n                            </Message>}\r\n                        <Button onClick={submitHandler} type='submit'>Log in</Button>\r\n                    </Form>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LogIn;","import React, { useEffect, useState } from \"react\";\r\nimport \"./homepage.scss\";\r\nimport SignUp from \"./sign-up\";\r\nimport LogIn from \"./login\";\r\nimport * as authService from \"../services/auth.service\";\r\n\r\n\r\nconst Navigation = () => {\r\n    const [loginStatus, setLoginStatus] = useState(authService.isLoggedIn());\r\n\r\n    const loginHandler = () => {\r\n        setLoginStatus(authService.isLoggedIn());\r\n    }\r\n\r\n    const logOut = () => {\r\n        authService.logout();\r\n        setLoginStatus(authService.isLoggedIn());\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {loginStatus &&\r\n                <h5 className=\"ui header avatar-header\">\r\n                    <img src={process.env.PUBLIC_URL + '/unknown.png' } className=\"ui circular image\" />\r\n                    {authService.getUser()}\r\n                </h5> }\r\n            <LogIn isLoggedOut={logOut} isLogged={loginStatus} onLogin={loginHandler} />\r\n            <SignUp isLogged={loginStatus} />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"./homepage.scss\";\r\nimport { Container, Header, Button } from 'semantic-ui-react'\r\nimport Topics from \"./topics\";\r\nimport Navigation from \"./navigation\";\r\n\r\n\r\n\r\nconst Homepage = ({ mobile }) => {\r\n    return (\r\n        <Container fluid className=\"main-container\">\r\n            <div className=\"homepage__block\">\r\n                <div className=\"homepage__block--button\">\r\n                    <Navigation/>\r\n                </div>\r\n                <div className=\"homepage__title\">\r\n                    <Header as=\"h1\" inverted content='Welcome to Forum'></Header>\r\n                    <Header\r\n                        as='h2'\r\n                        content='Do whatever you want when you want to.'\r\n                        inverted\r\n                        style={{\r\n                            fontSize: mobile ? '1.5em' : '1.7em',\r\n                            fontWeight: 'normal',\r\n                            marginTop: mobile ? '0.5em' : '1.5em',\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <Container className=\"grid-container\">\r\n                <div className=\"homepage\">\r\n                    <div className=\"homepage__content\">\r\n                        <Topics />\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Homepage;","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Comment } from 'semantic-ui-react';\r\nimport * as authService from \"../services/auth.service\";\r\n\r\nconst AddAnswer = (props) => {\r\n    const [error, setError] = useState({});\r\n    let [reply, setReply] = useState({ text: '', textLength: 200 });\r\n\r\n    let textHandler = (event) => {\r\n        let text = event.target.value;\r\n        let newTextLength = text.length;\r\n        let max = 200;\r\n        let textLeft = max - newTextLength;\r\n        if (newTextLength > max) {\r\n            setError({ ...error, textLength: { message: \"You have reached the limit\" } });\r\n            return;\r\n        } else {\r\n            setError({ ...error, textLength: null })\r\n        }\r\n        setReply({ ...reply, text: text, textLength: textLeft });\r\n    }\r\n\r\n    const replyHandler = (e) => {\r\n        if (!authService.isLoggedIn()) {\r\n            document.getElementById('loginButton').click();\r\n            return;\r\n        }\r\n\r\n        // Validations\r\n        if (!reply.text) {\r\n            setError({ ...error, text: { message: \"This field cannot be empty\" } });\r\n            return;\r\n        } else if (reply.text.length <= 1) {\r\n            setError({ ...error, text: { message: \"This field has to have more than 1 letter\" } })\r\n            return;\r\n        } else {\r\n            setError({ ...error, text: false })\r\n        }\r\n\r\n        props.onAddAnswer({\r\n            id: Math.floor(Math.random() * 100),\r\n            publishedAt: new Date(),\r\n            publishedBy: authService.getUser(),\r\n            text: reply.text\r\n        })\r\n        setReply({ ...reply, text: '', textLength: '200' });\r\n    }\r\n\r\n\r\n    return (\r\n        <Form reply>\r\n            <Form.TextArea\r\n                onChange={textHandler}\r\n                value={reply.text}\r\n                error={error.text ? { content: error.text.message, pointing: 'below' } : null}\r\n                placeholder=\"Answer\">\r\n            </Form.TextArea>\r\n            <p>{reply.textLength}</p>\r\n            {error.textLength && <p>{error.textLength.message}</p>}\r\n            <Button onClick={replyHandler} content='Add Reply' labelPosition='left' icon='edit' primary />\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default AddAnswer;","import React, { useState, useEffect } from \"react\";\r\nimport { Comment } from 'semantic-ui-react'\r\n\r\nconst Answer = (props) => {\r\n    return (\r\n        <Comment.Group>\r\n            <Comment>\r\n                <Comment.Avatar as='a' src={process.env.PUBLIC_URL + '/unknown.png'} />\r\n                <Comment.Content>\r\n                    <Comment.Author>{props.publishedBy}</Comment.Author>\r\n                    <Comment.Metadata>\r\n                        {new Date(props.publishedAt).toLocaleString(navigator.language, { dateStyle: 'long', timeStyle: 'short', hour12: true })}\r\n                    </Comment.Metadata>\r\n                    <Comment.Text>\r\n                        {props.text}\r\n                    </Comment.Text>\r\n                </Comment.Content>\r\n            </Comment>\r\n        </Comment.Group>\r\n    )\r\n}\r\n\r\nexport default Answer;","import React, { useState, useEffect } from \"react\";\r\nimport Answer from \"./answer\";\r\n\r\nconst AnswerList = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.answers && props.answers.map(answer => {\r\n                return (\r\n                    <Answer key={answer.id}\r\n                        publishedBy={answer.publishedBy}\r\n                        publishedAt={answer.publishedAt}\r\n                        text={answer.text}\r\n                    />\r\n                )\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default AnswerList;","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Header } from 'semantic-ui-react'\r\nimport AddAnswer from \"./addAnswer\";\r\nimport \"./homepage.scss\";\r\nimport topicService from \"../services/topic.service\"\r\nimport AnswerList from \"./answer-list\";\r\nimport Navigation from \"./navigation\";\r\n\r\nconst TopicPage = (props) => {\r\n    const [topic, setTopic] = useState({});\r\n\r\n    useEffect(() => {\r\n        topicService.getTopic(props.match.params.topicId).then(topic => {\r\n            setTopic(topic);\r\n        });\r\n    }, []);\r\n\r\n    const addBackground = () => {\r\n        let pallete = ['red', 'blue', 'green', 'orange', 'purple', 'pink', 'yellow', 'lavander', 'lightblue', 'brown'];\r\n        let modulos = topic.id % 10;\r\n        return pallete[modulos];\r\n\r\n    }\r\n\r\n    const addAnswerHandler = (answer) => {\r\n        topicService.addAnswer(topic.id, answer).then(response => {\r\n            setTopic({\r\n                ...topic,\r\n                answers: [...topic.answers, answer]\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-container\">\r\n            <div className=\"homepage__block\">\r\n                <div className=\"homepage__block--button\">\r\n                    <Navigation />\r\n                </div>\r\n                <div style={{ backgroundColor: addBackground() }} className=\"homepage__title\">\r\n                    <Header as=\"h2\" inverted content={topic.title}></Header>\r\n                </div>\r\n                <Container className=\"grid-container\">\r\n                    <div className=\"topic-page\">\r\n                        <AnswerList answers={topic.answers} />\r\n                        <AddAnswer onAddAnswer={addAnswerHandler} />\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TopicPage;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport './App.scss';\n\nimport Homepage from \"./components/homepage\";\nimport TopicPage from './components/topic-page';\n\nfunction App() {\n    return (\n        <div >\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path=\"/\" exact component={Homepage}></Route>\n                    <Route path=\"/question/:topicId\" component={TopicPage}></Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const defaultTopics = [\r\n    {\r\n        id: \"1\",\r\n        title: \"Where to find a nice dress\",\r\n        answers: [\r\n            {\r\n                id: '1',\r\n                publishedAt: \"2020-05-06 12:23:45\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"You can find dress in street Kralja Petra\"\r\n            },\r\n            {\r\n                id: '2',\r\n                publishedAt: \"2020-05-06 15:00:01\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"I have found mine there\"\r\n            },\r\n            {\r\n                id: '3',\r\n                publishedAt: \"2020-05-06 19:43:15\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"There are also nice stores in street Strahinjica Bana\"\r\n            },\r\n            {\r\n                id: '4',\r\n                publishedAt: \"2020-05-06 20:23:55\",\r\n                publishedBy: \"Petar Petrovic\",\r\n                text: \"I am interested about dresses in Panchevo\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Interesting games to play\",\r\n        answers: [\r\n            {\r\n                id: '1',\r\n                publishedAt: \"2020-05-06 12:23:45\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"quroidor\"\r\n            },\r\n            {\r\n                id: '2',\r\n                publishedAt: \"2020-05-06 15:00:01\",\r\n                publishedBy: \"Vedrana Bradasevic\",\r\n                text: \"Monopol\"\r\n            },\r\n            {\r\n                id: '12',\r\n                publishedAt: \"2020-05-06 19:43:15\",\r\n                publishedBy: \"Nikolija Nikolic\",\r\n                text: \"Jamb\"\r\n            },\r\n            {\r\n                id: '4',\r\n                publishedAt: \"2020-05-06 20:23:55\",\r\n                publishedBy: \"Petar Petrovic\",\r\n                text: \"Lora\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"Songs for weddings\",\r\n        answers: [\r\n            {\r\n                id: '1',\r\n                publishedAt: \"2020-05-06 12:23:45\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"Dance with somebody\"\r\n            },\r\n            {\r\n                id: '2',\r\n                publishedAt: \"2020-05-06 15:00:01\",\r\n                publishedBy: \"Vedrana Bradasevic\",\r\n                text: \"I have found mine there\"\r\n            },\r\n            {\r\n                id: '3',\r\n                publishedAt: \"2020-05-06 19:43:15\",\r\n                publishedBy: \"Nikolija Nikolic\",\r\n                text: \"There are also nice stores in street Strahinjica Bana\"\r\n            },\r\n            {\r\n                id: '4',\r\n                publishedAt: \"2020-05-06 20:23:55\",\r\n                publishedBy: \"Petar Petrovic\",\r\n                text: \"I am interested about dresses in Panchevo\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nconst getDefaultTopics = () => {\r\n    localStorage.setItem('topics', JSON.stringify(defaultTopics));\r\n    return JSON.parse(JSON.stringify(defaultTopics));\r\n}\r\n\r\nmodule.exports.getTopics = () => {\r\n    return new Promise((resolve, reject) => {\r\n        let topics = JSON.parse(localStorage.getItem(\"topics\")) || getDefaultTopics();\r\n        topics = topics.map(topic => {\r\n            return {\r\n                id: topic.id,\r\n                title: topic.title,\r\n                lastAnswerPublishedAt: topic.answers.length > 0 ? topic.answers.sort((answer1, answer2) =>\r\n                 { return new Date(answer2.publishedAt).getTime() - new Date(answer1.publishedAt).getTime() })[0].publishedAt : null,\r\n                numberOfAnswers: topic.answers.length\r\n            }\r\n        });\r\n        resolve({\r\n            status: 200,\r\n            data: topics\r\n        });\r\n    });\r\n};\r\n\r\nmodule.exports.getTopic = (topicId) => {\r\n    return new Promise((resolve, reject) => {\r\n        const topics = JSON.parse(localStorage.getItem(\"topics\")) || getDefaultTopics();\r\n        resolve(topics.find(topic => topic.id === topicId));\r\n    });\r\n};\r\n\r\nmodule.exports.addTopic = (topic) => {\r\n    return new Promise((resolve, reject) => {\r\n        const topics = JSON.parse(localStorage.getItem(\"topics\")) || [];\r\n        if (topic.title.length < 5) {\r\n            return;\r\n        } else {\r\n            topics.push(topic);\r\n        }\r\n        localStorage.setItem(\"topics\", JSON.stringify(topics));\r\n        resolve({\r\n            status: 201\r\n        });\r\n    });\r\n};\r\n\r\nmodule.exports.addAnswer = (topicId, answer) => {\r\n    return new Promise((resolve, reject) => {\r\n        const topics = JSON.parse(localStorage.getItem(\"topics\")) || getDefaultTopics();\r\n        const topic = topics.find(topic => topic.id == topicId);\r\n        topic.answers.push(answer);\r\n        localStorage.setItem('topics', JSON.stringify(topics));\r\n        resolve({\r\n            status: 201\r\n        });\r\n    });\r\n}"],"sourceRoot":""}