{"version":3,"sources":["services/topic.service.js","components/homepage.js","components/sign-up.js","App.js","serviceWorker.js","index.js"],"names":["defaultTopics","id","title","answers","publishedAt","publishedBy","text","getDefaultTopics","localStorage","setItem","JSON","stringify","parse","module","exports","getTopics","Promise","resolve","reject","topics","getItem","status","data","map","topic","lastAnswerPublishedAt","length","sort","answer1","answer2","Date","getTime","numberOfAnswers","getTopic","topicId","find","addTopic","push","addAnswer","answer","Homepage","mobile","Container","fluid","className","Header","as","inverted","content","style","fontSize","fontWeight","marginTop","require","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.52798c19.chunk.js","sourcesContent":["const defaultTopics = [\r\n    {\r\n        id: \"1\",\r\n        title: \"Where to find a nice dress\",\r\n        answers: [\r\n            {\r\n                id: '1',\r\n                publishedAt: \"2020-05-06 12:23:45\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"You can find dress in street Kralja Petra\"\r\n            },\r\n            {\r\n                id: '2',\r\n                publishedAt: \"2020-05-06 15:00:01\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"I have found mine there\"\r\n            },\r\n            {\r\n                id: '3',\r\n                publishedAt: \"2020-05-06 19:43:15\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"There are also nice stores in street Strahinjica Bana\"\r\n            },\r\n            {\r\n                id: '4',\r\n                publishedAt: \"2020-05-06 20:23:55\",\r\n                publishedBy: \"Petar Petrovic\",\r\n                text: \"I am interested about dresses in Panchevo\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: \"2\",\r\n        title: \"Interesting games to play\",\r\n        answers: [\r\n            {\r\n                id: '1',\r\n                publishedAt: \"2020-05-06 12:23:45\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"quroidor\"\r\n            },\r\n            {\r\n                id: '2',\r\n                publishedAt: \"2020-05-06 15:00:01\",\r\n                publishedBy: \"Vedrana Bradasevic\",\r\n                text: \"Monopol\"\r\n            },\r\n            {\r\n                id: '12',\r\n                publishedAt: \"2020-05-06 19:43:15\",\r\n                publishedBy: \"Nikolija Nikolic\",\r\n                text: \"Jamb\"\r\n            },\r\n            {\r\n                id: '4',\r\n                publishedAt: \"2020-05-06 20:23:55\",\r\n                publishedBy: \"Petar Petrovic\",\r\n                text: \"Lora\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: \"3\",\r\n        title: \"Songs for weddings\",\r\n        answers: [\r\n            {\r\n                id: '1',\r\n                publishedAt: \"2020-05-06 12:23:45\",\r\n                publishedBy: \"John Doe\",\r\n                text: \"Dance with somebody\"\r\n            },\r\n            {\r\n                id: '2',\r\n                publishedAt: \"2020-05-06 15:00:01\",\r\n                publishedBy: \"Vedrana Bradasevic\",\r\n                text: \"I have found mine there\"\r\n            },\r\n            {\r\n                id: '3',\r\n                publishedAt: \"2020-05-06 19:43:15\",\r\n                publishedBy: \"Nikolija Nikolic\",\r\n                text: \"There are also nice stores in street Strahinjica Bana\"\r\n            },\r\n            {\r\n                id: '4',\r\n                publishedAt: \"2020-05-06 20:23:55\",\r\n                publishedBy: \"Petar Petrovic\",\r\n                text: \"I am interested about dresses in Panchevo\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nconst getDefaultTopics = () => {\r\n    localStorage.setItem('topics', JSON.stringify(defaultTopics));\r\n    return JSON.parse(JSON.stringify(defaultTopics));\r\n}\r\n\r\nmodule.exports.getTopics = () => {\r\n    return new Promise((resolve, reject) => {\r\n        let topics = JSON.parse(localStorage.getItem(\"topics\")) || getDefaultTopics();\r\n        topics = topics.map(topic => {\r\n            return {\r\n                id: topic.id,\r\n                title: topic.title,\r\n                lastAnswerPublishedAt: topic.answers.length > 0 ? topic.answers.sort((answer1, answer2) =>\r\n                 { return new Date(answer2.publishedAt).getTime() - new Date(answer1.publishedAt).getTime() })[0].publishedAt : null,\r\n                numberOfAnswers: topic.answers.length\r\n            }\r\n        });\r\n        resolve({\r\n            status: 200,\r\n            data: topics\r\n        });\r\n    });\r\n};\r\n\r\nmodule.exports.getTopic = (topicId) => {\r\n    return new Promise((resolve, reject) => {\r\n        const topics = JSON.parse(localStorage.getItem(\"topics\")) || getDefaultTopics();\r\n        resolve(topics.find(topic => topic.id === topicId));\r\n    });\r\n};\r\n\r\nmodule.exports.addTopic = (topic) => {\r\n    return new Promise((resolve, reject) => {\r\n        const topics = JSON.parse(localStorage.getItem(\"topics\")) || [];\r\n        if (topic.title.length < 5) {\r\n            return;\r\n        } else {\r\n            topics.push(topic);\r\n        }\r\n        localStorage.setItem(\"topics\", JSON.stringify(topics));\r\n        resolve({\r\n            status: 201\r\n        });\r\n    });\r\n};\r\n\r\nmodule.exports.addAnswer = (topicId, answer) => {\r\n    return new Promise((resolve, reject) => {\r\n        const topics = JSON.parse(localStorage.getItem(\"topics\")) || getDefaultTopics();\r\n        const topic = topics.find(topic => topic.id == topicId);\r\n        topic.answers.push(answer);\r\n        localStorage.setItem('topics', JSON.stringify(topics));\r\n        resolve({\r\n            status: 201\r\n        });\r\n    });\r\n}","import React from \"react\";\r\nimport \"./homepage.scss\";\r\nimport { Container, Header, Button } from 'semantic-ui-react'\r\n//import Topics from \"./topics\";\r\n//import Navigation from \"./navigation\";\r\n\r\n\r\n\r\nconst Homepage = ({ mobile }) => {\r\n    return (\r\n        <Container fluid className=\"main-container\">\r\n            <div className=\"homepage__block\">\r\n                <div className=\"homepage__block--button\">\r\n                   \r\n                </div>\r\n                <div className=\"homepage__title\">\r\n                    <Header as=\"h1\" inverted content='Welcome to Forum'></Header>\r\n                    <Header\r\n                        as='h2'\r\n                        content='Do whatever you want when you want to.'\r\n                        inverted\r\n                        style={{\r\n                            fontSize: mobile ? '1.5em' : '1.7em',\r\n                            fontWeight: 'normal',\r\n                            marginTop: mobile ? '0.5em' : '1.5em',\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            <Container className=\"grid-container\">\r\n                <div className=\"homepage\">\r\n                    <div className=\"homepage__content\">\r\n                     \r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </Container>\r\n\r\n    )\r\n}\r\nexport default Homepage;","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Modal } from 'semantic-ui-react'\r\nimport * as authService from \"../services/auth.service\";\r\nconst Joi = require('@hapi/joi');\r\n\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const [user, setUsers] = useState({ username: '', password: '', confirmPassword: '', checked: false });\r\n    const [error, setError] = useState();\r\n    const [modal, setModal] = useState({ modalOpen: false });\r\n\r\n    const handleOpen = () => {\r\n        setModal({ ...modal, modalOpen: true });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setModal({ ...modal, modalOpen: false });\r\n        resetValues();\r\n    }\r\n\r\n    const resetValues = () => {\r\n        setUsers({ ...user, username: '', password: '', confirmPassword: '', checked: false });\r\n    }\r\n\r\n    const addUsernameHandler = (event) => {\r\n        let username = event.target.value;\r\n        setUsers({ ...user, username: username });\r\n    }\r\n\r\n    const addPasswordHandler = (event) => {\r\n        let password = event.target.value;\r\n        setUsers({ ...user, password: password });\r\n    }\r\n\r\n    const addConfirmPasswordHandler = (event) => {\r\n        let confirmPassword = event.target.value;\r\n        setUsers({ ...user, confirmPassword: confirmPassword });\r\n    }\r\n\r\n    const checkboxHandler = () => {\r\n        setUsers({ ...user, checked: !user.checked });\r\n    }\r\n\r\n    const validations = () => {\r\n        const schema = Joi.object({\r\n            username: Joi.string()\r\n                .alphanum()\r\n                .min(3)\r\n                .max(30)\r\n                .required()\r\n                .messages({\r\n                    'string.base': `Username should be a type of 'text'`,\r\n                    'string.empty': `Username cannot be an empty field`,\r\n                    'string.min': `Username should have a minimum length of {#limit}`,\r\n                    'string.max': `Password should have a maximum length of {#limit}`,\r\n                    'any.required': `Username is a required field`\r\n                }),\r\n            password: Joi.string()\r\n                .pattern(/^[a-zA-Z0-9]*$/)\r\n                .min(8)\r\n                .max(30)\r\n                .required()\r\n                .messages({\r\n                    'string.pattern.base': `Password should contain numbers and letters only`,\r\n                    'string.empty': `Password cannot be an empty field`,\r\n                    'string.min': `Password should have a minimum length of {#limit}`,\r\n                    'string.max': `Password should have a maximum length of {#limit}`,\r\n                    'any.required': `Password is a required field`\r\n                }),\r\n            confirmPassword: Joi.string()\r\n                .valid(Joi.ref('password'))\r\n                .required()\r\n                .messages({\r\n                    'string.pattern.base': `Confirm password should contain numbers and letters only`,\r\n                    'string.empty': `Confirm password cannot be an empty field`,\r\n                    'any.required': `Confirm password is a required field`,\r\n                    'any.only': \"Passwords are not matching\"\r\n                }),\r\n            checked: Joi.boolean()\r\n                .valid(true)\r\n        }).options({\r\n            abortEarly: false\r\n        });\r\n\r\n        return schema.validate(user);\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        const isValid = validations().error;\r\n        setError(isValid);\r\n\r\n        if (isValid) {\r\n            return;\r\n        }\r\n\r\n        authService.addUser(user.username, user.password).then(response => {\r\n            setModal({ ...modal, modalOpen: false });\r\n            resetValues();\r\n        });\r\n    }\r\n\r\n    const getError = (error, prop) => {\r\n        return error && error.details.find(err => err.path.includes(prop));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {!props.isLogged &&\r\n                <Button onClick={handleOpen}>Sign Up</Button>}\r\n            <Modal size='tiny'\r\n                onClose={handleClose}\r\n                open={modal.modalOpen}\r\n                closeIcon>\r\n                <Modal.Header>Sign Up</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Username</label>\r\n                            <Form.Input\r\n                                error={getError(error, 'username') ? { content: getError(error, 'username').message, pointing: 'above' } : null}\r\n                                value={user.username} onChange={addUsernameHandler} />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Password</label>\r\n                            <Form.Input\r\n                                error={getError(error, \"password\") ? { content: getError(error, \"password\").message, pointing: 'above' } : null}\r\n                                value={user.password}\r\n                                type=\"password\"\r\n                                onChange={addPasswordHandler}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Confirm Password</label>\r\n                            <Form.Input\r\n                                value={user.confirmPassword}\r\n                                error={getError(error, \"confirmPassword\") ? { content: getError(error, \"confirmPassword\").message, pointing: 'above' } : null}\r\n                                type=\"password\" onChange={addConfirmPasswordHandler}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Form.Checkbox checked={user.checked} error={getError(error, 'checked') ? true : null} onChange={checkboxHandler} label='I agree to the Terms and Conditions' />\r\n                        </Form.Field>\r\n                        <Button onClick={submitHandler} type='submit'>Submit</Button>\r\n                    </Form>\r\n                </Modal.Content>\r\n            </Modal>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\n/*import {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";*/\nimport './App.scss';\n\nimport Homepage from \"./components/homepage\";\nimport TopicPage from './components/topic-page';\n\nfunction App() {\n    return (\n        <div >\n           <Homepage/>\n        </div>\n    );\n}\n\nexport default App;\n\n/*\n <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={Homepage}></Route>\n                    <Route path=\"/question/:topicId\" component={TopicPage}></Route>\n                </Switch>\n            </Router> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}